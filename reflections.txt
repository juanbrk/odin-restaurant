RES-DEV-1 -----------------------
Using npm init to create a package.json as a configuration file that npm uses to save all project information.

RES-DEV-2: Webpack--------------------

 A JavaScript module bundler is a tool that gets around the problem with a build step (which has access to the file system) to create a final output that is browser compatible (which doesn’t need access to the file system)

 Webpack is simply a tool for bundling modules

 When webpack runs, it goes through all of our files looking for any import statements and then compiles all of the code we need to run our site into a single file 


 RES-DEV-3: Project structure ----------

 There are a couple of key concepts to understanding how webpack works entry and output. Our entry file, then is the main application file that links (either directly or indirectly) to all of the other modules in our project. The output file is the compiled version . 

 we'll tweak our directory structure slightly, separating the "source" code (./src) from our "distribution" code (./dist). The "source" code is the code that we'll write and edit. The "distribution" code is the minimized and optimized output of our build process that will eventually be loaded in the browser


 RES-DEV-4: npx webpack ---------------

 npx is a tool intended to help round out the experience of using packages from the npm registry — the same way npm makes it super easy to install and manage dependencies hosted on the registry, npx makes it easy to use CLI tools and other executables hosted on the registry.

 npx is also a CLI tool whose purpose is to make it easy to install and manage dependencies hosted in the npm registry.

 